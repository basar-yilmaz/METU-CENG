                            | # BAÅžAR YILMAZ 2644409
                            | 
                            | #################################################################
                            | # By only implementing the pipelined jtab.
                            | # I got avg cpe 26.16875 from 45.61875 
                            | #################################################################
0x000:                      | .pos 0x0
0x000: 30f4001f000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer  
0x00a: 30f70810000000000000 |     irmovq array_begin1, %rdi
0x014: 30f60015000000000000 |     irmovq array_begin2, %rsi
0x01e: 30f21000000000000000 |     irmovq $16, %rdx
0x028: 803200000000000000   |     call switch8
0x031: 00                   |     halt
                            | 
                            | #implement your code below (DO NOT CHANGE/REMOVE THIS COMMENT)
                            | 
0x032:                      | switch8:
0x032:                      | loop:
0x032: 6222                 |     andq %rdx, %rdx
0x034: 71e200000000000000   |     jle done:
                            |     
0x03d: 50870000000000000000 |     mrmovq (%rdi), %r8
0x047: 50b70000000000000000 |     mrmovq (%rdi), %r11
0x051: 30fc0800000000000000 |     irmovq $8, %r12
0x05b: 66c8                 |     modq %r12, %r8
0x05d: 2089                 |     rrmovq %r8, %r9
0x05f: d0f96900000000000000 |     jtab jump_table, %r9
                            | 
0x069:                      | jump_table:
0x069: e300000000000000     |     .quad case0
0x071: f800000000000000     |     .quad case1
0x079: 0d01000000000000     |     .quad case2
0x081: 2201000000000000     |     .quad case3
0x089: 3701000000000000     |     .quad case4
0x091: 4c01000000000000     |     .quad case5
0x099: 5f01000000000000     |     .quad case6
0x0a1: 7401000000000000     |     .quad case7
                            | 
0x0a9:                      |     cases_over:
0x0a9: 30fa1000000000000000 |     irmovq $16, %r10
0x0b3: 60ab                 |     addq %r10, %r11
0x0b5: 40b60000000000000000 |     rmmovq %r11, (%rsi)
0x0bf: 30fa0100000000000000 |     irmovq $1, %r10
0x0c9: 61a2                 |     subq %r10, %rdx
0x0cb: 30fa0800000000000000 |     irmovq $8, %r10
0x0d5: 60a7                 |     addq %r10, %rdi 
0x0d7: 60a6                 |     addq %r10, %rsi
0x0d9: 703200000000000000   |     jmp loop
0x0e2:                      | done:
0x0e2: 90                   | ret
                            | 
                            | 
                            | #0 -> add 1
0x0e3:                      | case0:
0x0e3: 30fa0100000000000000 | irmovq $1, %r10
0x0ed: 60ab                 | addq %r10, %r11
0x0ef: 70a900000000000000   | jmp cases_over
                            | 
                            | #1 -> multiply by 5
0x0f8:                      | case1:
0x0f8: 30fa0500000000000000 | irmovq $5, %r10
0x102: 65ab                 | mllq %r10, %r11
0x104: 70a900000000000000   | jmp cases_over
                            | 
                            | #2 -> divide by 2
0x10d:                      | case2:
0x10d: 30fa0200000000000000 | irmovq $2, %r10
0x117: 67ab                 | dvvq %r10, %r11
0x119: 70a900000000000000   | jmp cases_over
                            | 
                            | #3 -> take mod 3
0x122:                      | case3:
0x122: 30fa0300000000000000 | irmovq $3, %r10
0x12c: 66ab                 | modq %r10, %r11
0x12e: 70a900000000000000   | jmp cases_over
                            | 
                            | #4 -> subtract 7
0x137:                      | case4:
0x137: 30fa0700000000000000 | irmovq $7, %r10
0x141: 61ab                 | subq %r10, %r11
0x143: 70a900000000000000   | jmp cases_over
                            | 
                            | #5 -> make it 331
0x14c:                      | case5:
0x14c: 30fb4b01000000000000 | irmovq $331, %r11
0x156: 70a900000000000000   | jmp cases_over
                            | 
                            | #6 -> add 10
0x15f:                      | case6:
0x15f: 30fa0a00000000000000 | irmovq $10, %r10
0x169: 60ab                 | addq %r10, %r11
0x16b: 70a900000000000000   | jmp cases_over
                            | 
                            | #7 -> divide by 3
0x174:                      | case7:
0x174: 30fa0300000000000000 | irmovq $3, %r10
0x17e: 67ab                 | dvvq %r10, %r11
0x180: 70a900000000000000   | jmp cases_over
                            | 
                            | 
                            | 
                            | #implement your code above (DO NOT CHANGE/REMOVE THIS COMMENT)
                            | 
0x1008:                      | .pos 0x1008
0x1008:                      | array_begin1:
0x1008:0000000000000000      |     .quad 0
0x1010:0100000000000000      |     .quad 1
0x1018:0200000000000000      |     .quad 2
0x1020:0300000000000000      |     .quad 3
0x1028:0400000000000000      |     .quad 4
0x1030:0500000000000000      |     .quad 5
0x1038:0600000000000000      |     .quad 6
0x1040:0700000000000000      |     .quad 7
0x1048:0800000000000000      |     .quad 8
0x1050:0900000000000000      |     .quad 9
0x1058:0a00000000000000      |     .quad 10
0x1060:0b00000000000000      |     .quad 11
0x1068:0c00000000000000      |     .quad 12
0x1070:0d00000000000000      |     .quad 13
0x1078:0e00000000000000      |     .quad 14
0x1080:0f00000000000000      |     .quad 15
0x1088:                      | array_end1:
0x1088:0000000000000000      |     .quad 0
0x1500:                      | .pos 0x1500
0x1500:                      | array_begin2:
0x1500:0000000000000000      |     .quad 0
0x1f00:                      | .pos 0x1F00
0x1f00:                      | stack:
0x1f00:0000000000000000      |     .quad 0
                             | 
                             | 
