0x000:                      | .pos 0x0
0x000:                      | init:
0x000: 30f4001f000000000000 |     irmovq stack, %rsp
0x00a: 30f70810000000000000 |     irmovq array_begin1, %rdi
0x014: 30f67010000000000000 |     irmovq array_end1, %rsi
0x01e: 30f27810000000000000 |     irmovq array_begin2, %rdx
0x028: 30f1e010000000000000 |     irmovq array_end2, %rcx
0x032: 30f80013000000000000 |     irmovq array_begin3, %r8
0x03c: 804600000000000000   |     call merge
0x045: 00                   |     halt
                            | 
                            | 
0x046:                      | merge:
0x046: 4074f8ffffffffffffff |     rmmovq    %rdi, -8(%rsp)   # begin1
0x050: 4064f0ffffffffffffff |     rmmovq    %rsi, -16(%rsp)  # end1
0x05a: 4024e8ffffffffffffff |     rmmovq    %rdx, -24(%rsp)  # begin2
0x064: 4014e0ffffffffffffff |     rmmovq    %rcx, -32(%rsp)  # end2
0x06e: 4084d8ffffffffffffff |     rmmovq    %r8, -40(%rsp)   # begin3
0x078: 708100000000000000   |     jmp first_while
                            | 
0x081:                      | first_while:
0x081: 5004f8ffffffffffffff |     mrmovq   -8(%rsp), %rax    # %rax = begin1
0x08b: 5034f0ffffffffffffff |     mrmovq   -16(%rsp), %rbx   # %rbx = end1
0x095: 6130                 |     subq     %rbx, %rax        # %rax = begin1 - end1
0x097: 75b101000000000000   |     jge second_while           # first condition violated
0x0a0: 5004e8ffffffffffffff |     mrmovq   -24(%rsp), %rax   # %rcx = begin2
0x0aa: 5034e0ffffffffffffff |     mrmovq   -32(%rsp), %rbx   # %rdx = end2
0x0b4: 6130                 |     subq     %rbx, %rax        # %rax = begin2 - end2
0x0b6: 75b101000000000000   |     jge second_while           # second condition violated
0x0bf: 70c800000000000000   |     jmp first_while_body       # both conditions satisfied
                            | 
0x0c8:                      | first_while_body:
0x0c8: 5004f8ffffffffffffff |     mrmovq   -8(%rsp), %rax    # %rax = begin1
0x0d2: 50200000000000000000 |     mrmovq   0(%rax), %rdx     # %rdx = *begin1
0x0dc: 5004e8ffffffffffffff |     mrmovq   -24(%rsp), %rax   # %rax = begin2
0x0e6: 50000000000000000000 |     mrmovq   0(%rax), %rax     # %rax = *begin2
0x0f0: 6102                 |     subq     %rax, %rdx        # %rdx = *begin1 - *begin2
0x0f2: 755601000000000000   |     jge      first_while_else  # goes the else condition
0x0fb: 5024f8ffffffffffffff |     mrmovq   -8(%rsp), %rdx    # %rdx = begin1
0x105: 30fc0800000000000000 |     irmovq  $8, %r12           # %r12 = 8
0x10f: 60c2                 |     addq     %r12, %rdx        # %rdx = begin1 + 8
0x111: 2020                 |     rrmovq   %rdx, %rax        # %rax = begin1 + 8
0x113: 61c2                 |     subq     %r12, %rdx        # %rdx = begin1 + 8 - 8 (check)
0x115: 4004f8ffffffffffffff |     rmmovq   %rax, -8(%rsp)    # begin1 = begin1 + 8
0x11f: 5004d8ffffffffffffff |     mrmovq   -40(%rsp), %rax   # %rax = begin3
0x129: 60c0                 |     addq     %r12, %rax        # %rax = begin3 + 8
0x12b: 2001                 |     rrmovq   %rax, %rcx        # %rcx = begin3 + 8
0x12d: 61c0                 |     subq     %r12, %rax        # %rax = begin3 + 8 - 8 (check)
0x12f: 4014d8ffffffffffffff |     rmmovq   %rcx, -40(%rsp)   # begin3 = begin3 + 8
0x139: 50220000000000000000 |     mrmovq   0(%rdx), %rdx     # %rdx = *begin1
0x143: 40200000000000000000 |     rmmovq   %rdx, 0(%rax)     # (*begin3) = (*begin1 )
0x14d: 708100000000000000   |     jmp      first_while       # goes the first while
                            | 
0x156:                      | first_while_else:
0x156: 5024e8ffffffffffffff |     mrmovq  -24(%rsp), %rdx    # %rdx = begin2
0x160: 30fc0800000000000000 |     irmovq  $8, %r12           # %r12 = 8
0x16a: 60c2                 |     addq    %r12, %rdx         # %rdx = begin2 + 8
0x16c: 2020                 |     rrmovq  %rdx, %rax         # %rax = begin2 + 8
0x16e: 61c2                 |     subq    %r12, %rdx         # %rdx = begin2 + 8 - 8 (check)
0x170: 4004e8ffffffffffffff |     rmmovq  %rax, -24(%rsp)    # begin2 = begin2 + 8
0x17a: 5004d8ffffffffffffff |     mrmovq  -40(%rsp), %rax    # %rax = begin3
0x184: 60c0                 |     addq    %r12, %rax         # %rax = begin3 + 8
0x186: 2001                 |     rrmovq  %rax, %rcx         # %rcx = begin3 + 8
0x188: 61c0                 |     subq    %r12, %rax         # %rax = begin3 + 8 - 8 (check)
0x18a: 4014d8ffffffffffffff |     rmmovq  %rcx, -40(%rsp)    # begin3 = begin3 + 8
0x194: 50220000000000000000 |     mrmovq  0(%rdx), %rdx      # %rdx = *begin2
0x19e: 40200000000000000000 |     rmmovq  %rdx, 0(%rax)      # (*begin3) = (*begin2 )
0x1a8: 708100000000000000   |     jmp first_while            # goes the first while
                            | 
0x1b1:                      | second_while:
0x1b1: 5004f8ffffffffffffff |     mrmovq   -8(%rsp), %rax    # %rax = begin1
0x1bb: 5034f0ffffffffffffff |     mrmovq   -16(%rsp), %rbx   # %rbx = end1
0x1c5: 6130                 |     subq     %rbx, %rax        # %rax = begin1 - end1
0x1c7: 72d901000000000000   |     jl       second_while_body # first condition violated
0x1d0: 703402000000000000   |     jmp      third_while       # goes the third while
                            | 
0x1d9:                      | second_while_body:
0x1d9: 5024f8ffffffffffffff |     mrmovq  -8(%rsp), %rdx     # %rdx = begin1
0x1e3: 30fc0800000000000000 |     irmovq  $8, %r12           # %r12 = 8
0x1ed: 60c2                 |     addq    %r12, %rdx         # %rdx = begin1 + 8
0x1ef: 2020                 |     rrmovq  %rdx, %rax         # %rax = begin1 + 8
0x1f1: 61c2                 |     subq    %r12, %rdx         # %rdx = begin1 + 8 - 8 (check)
0x1f3: 4004f8ffffffffffffff |     rmmovq  %rax, -8(%rsp)     # begin1 = begin1 + 8
0x1fd: 5004d8ffffffffffffff |     mrmovq  -40(%rsp), %rax    # %rax = begin3
0x207: 60c0                 |     addq    %r12, %rax         # %rax = begin3 + 8
0x209: 2001                 |     rrmovq  %rax, %rcx         # %rcx = begin3 + 8
0x20b: 61c0                 |     subq    %r12, %rax         # %rax = begin3 + 8 - 8 (check)
0x20d: 4014d8ffffffffffffff |     rmmovq  %rcx, -40(%rsp)    # begin3 = begin3 + 8
0x217: 50220000000000000000 |     mrmovq  0(%rdx), %rdx      # %rdx = *begin1
0x221: 40200000000000000000 |     rmmovq  %rdx, 0(%rax)      # (*begin3) = (*begin1 )
0x22b: 70b101000000000000   |     jmp     second_while       # goes the second while
                            | 
0x234:                      | third_while:
0x234: 5004e8ffffffffffffff |     mrmovq  -24(%rsp), %rax    # %rax = begin2
0x23e: 5034e0ffffffffffffff |     mrmovq  -32(%rsp), %rbx    # %rbx = end2
0x248: 6130                 |     subq    %rbx, %rax         # %rax = begin2 - end2
0x24a: 725402000000000000   |     jl      third_while_body   # second condition violated
0x253: 90                   |     ret
                            | 
0x254:                      | third_while_body:
0x254: 5024e8ffffffffffffff |     mrmovq  -24(%rsp), %rdx    # %rdx = begin2
0x25e: 30fc0800000000000000 |     irmovq  $8, %r12           # %r12 = 8
0x268: 60c2                 |     addq    %r12, %rdx         # %rdx = begin2 + 8
0x26a: 2020                 |     rrmovq  %rdx, %rax         # %rax = begin2 + 8
0x26c: 61c2                 |     subq    %r12, %rdx         # %rdx = begin2 + 8 - 8 (check)
0x26e: 4004e8ffffffffffffff |     rmmovq  %rax, -24(%rsp)    # begin2 = begin2 + 8
0x278: 5004d8ffffffffffffff |     mrmovq  -40(%rsp), %rax    # %rax = begin3
0x282: 60c0                 |     addq    %r12, %rax         # %rax = begin3 + 8
0x284: 2001                 |     rrmovq  %rax, %rcx         # %rcx = begin3 + 8
0x286: 61c0                 |     subq    %r12, %rax         # %rax = begin3 + 8 - 8 (check)
0x288: 4014d8ffffffffffffff |     rmmovq  %rcx, -40(%rsp)    # begin3 = begin3 + 8
0x292: 50220000000000000000 |     mrmovq  0(%rdx), %rdx      # %rdx = *begin2
0x29c: 40200000000000000000 |     rmmovq  %rdx, 0(%rax)      # (*begin3) = (*begin2 )
0x2a6: 703402000000000000   |     jmp    third_while         # goes the third while
                            | 
                            | 
                            | 
                            | 
0x1008:                      | .pos 0x1008
0x1008:                      | array_begin1:
0x1008:6700000000000000      | .quad 103
0x1010:6800000000000000      | .quad 104
0x1018:6c00000000000000      | .quad 108
0x1020:7900000000000000      | .quad 121
0x1028:7f00000000000000      | .quad 127
0x1030:8300000000000000      | .quad 131
0x1038:9000000000000000      | .quad 144
0x1040:9500000000000000      | .quad 149
0x1048:a000000000000000      | .quad 160
0x1050:ac00000000000000      | .quad 172
0x1058:b200000000000000      | .quad 178
0x1060:c600000000000000      | .quad 198
0x1068:c700000000000000      | .quad 199
0x1070:                      | array_end1:
0x1070:0000000000000000      | .quad 0
0x1078:                      | array_begin2:
0x1078:7300000000000000      | .quad 115
0x1080:7500000000000000      | .quad 117
0x1088:8100000000000000      | .quad 129
0x1090:8500000000000000      | .quad 133
0x1098:9700000000000000      | .quad 151
0x10a0:9800000000000000      | .quad 152
0x10a8:9c00000000000000      | .quad 156
0x10b0:9d00000000000000      | .quad 157
0x10b8:a400000000000000      | .quad 164
0x10c0:a700000000000000      | .quad 167
0x10c8:af00000000000000      | .quad 175
0x10d0:ba00000000000000      | .quad 186
0x10d8:bf00000000000000      | .quad 191
0x10e0:                      | array_end2:
0x10e0:0000000000000000      | .quad 0
                             | 
0x1300:                      | .pos 0x1300
0x1300:                      | array_begin3:
0x1300:0000000000000000      | .quad 0
0x1f00:                      | .pos 0x1F00
0x1f00:                      | stack:
0x1f00:0000000000000000      | .quad 0
                             | 
